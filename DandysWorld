-- Criação da tela principal
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Criando o quadro (janela)
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 400, 0, 300)
frame.Position = UDim2.new(0.5, -200, 0.5, -150)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.ClipsDescendants = true -- Impede que os elementos visuais saiam do frame
frame.Parent = screenGui

-- Bordas arredondadas
local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 20)
UICorner.Parent = frame

-- Tornar a janela arrastável
local dragging, dragInput, dragStart, startPos
frame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = frame.Position
	end
end)
frame.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement and dragging then
		local delta = input.Position - dragStart
		frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
end)
frame.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = false
	end
end)

-- Botão de minimizar
local minimizeButton = Instance.new("TextButton")
minimizeButton.Size = UDim2.new(0, 40, 0, 30)
minimizeButton.Position = UDim2.new(1, -50, 0, 10)
minimizeButton.Text = "-"
minimizeButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.TextSize = 20
minimizeButton.Font = Enum.Font.SourceSansBold
minimizeButton.Parent = frame

-- Conteúdo Container
local contentFrame = Instance.new("Frame")
contentFrame.Size = UDim2.new(1, -20, 1, -50)
contentFrame.Position = UDim2.new(0, 10, 0, 40)
contentFrame.BackgroundTransparency = 1
contentFrame.Name = "ContentFrame"
contentFrame.Parent = frame

-- Lista de elementos visuais
local UIListLayout = Instance.new("UIListLayout")
UIListLayout.Padding = UDim.new(0, 10)
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Parent = contentFrame

-- Toggle Helper
local function createToggle(name, color, callback)
	local holder = Instance.new("Frame")
	holder.Size = UDim2.new(1, 0, 0, 40)
	holder.BackgroundTransparency = 1
	holder.Parent = contentFrame

	local label = Instance.new("TextLabel")
	label.Size = UDim2.new(0.7, 0, 1, 0)
	label.BackgroundTransparency = 1
	label.Text = name
	label.TextColor3 = Color3.fromRGB(255, 255, 255)
	label.Font = Enum.Font.SourceSans
	label.TextSize = 18
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.Parent = holder

	local toggle = Instance.new("Frame")
	toggle.Size = UDim2.new(0, 60, 0, 24)
	toggle.Position = UDim2.new(1, -70, 0.5, -12)
	toggle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	toggle.BorderSizePixel = 0
	toggle.Parent = holder

	local toggleCorner = Instance.new("UICorner")
	toggleCorner.CornerRadius = UDim.new(0, 12)
	toggleCorner.Parent = toggle

	local knob = Instance.new("Frame")
	knob.Size = UDim2.new(0, 20, 0, 20)
	knob.Position = UDim2.new(0, 2, 0, 2)
	knob.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
	knob.BorderSizePixel = 0
	knob.Parent = toggle

	local knobCorner = Instance.new("UICorner")
	knobCorner.CornerRadius = UDim.new(1, 0)
	knobCorner.Parent = knob

	local enabled = false
	toggle.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			enabled = not enabled
			knob:TweenPosition(
				enabled and UDim2.new(1, -22, 0, 2) or UDim2.new(0, 2, 0, 2),
				"Out", "Quad", 0.2, true
			)
			knob.BackgroundColor3 = enabled and Color3.fromRGB(color, 255, 100) or Color3.fromRGB(200, 200, 200)
			callback(enabled)
		end
	end)
end

-- Função 1 - Destacar Monsters (vermelho)
local monsterHighlights = {}
createToggle("Destacar Monstros (vermelho)", 255, function(enabled)
	for _, h in pairs(monsterHighlights) do h:Destroy() end
	table.clear(monsterHighlights)

	if enabled then
		for _, model in ipairs(workspace:GetChildren()) do
			if model:IsA("Model") and model.Name:match(".*Monster$") then
				local hl = Instance.new("Highlight")
				hl.FillColor = Color3.fromRGB(255, 0, 0)
				hl.FillTransparency = 0.3
				hl.OutlineColor = Color3.fromRGB(255, 100, 100)
				hl.Adornee = model
				hl.Parent = model
				table.insert(monsterHighlights, hl)
			end
		end
	end
end)

-- Função 2 - Destacar Geradores (azul)
local generatorHighlights = {}
createToggle("Destacar Geradores (azul)", 150, function(enabled)
	for _, h in pairs(generatorHighlights) do h:Destroy() end
	table.clear(generatorHighlights)

	if enabled then
		local currentRoom = workspace:FindFirstChild("CurrentRoom")
		if currentRoom then
			for _, sala in ipairs(currentRoom:GetChildren()) do
				if sala:IsA("Model") then
					local generatorsFolder = sala:FindFirstChild("Generators")
					if generatorsFolder then
						local generatorFolder = generatorsFolder:FindFirstChild("Generator")
						if generatorFolder then
							for _, model in ipairs(generatorFolder:GetChildren()) do
								if model:IsA("Model") then
									local hl = Instance.new("Highlight")
									hl.FillColor = Color3.fromRGB(0, 150, 255)
									hl.FillTransparency = 0.3
									hl.OutlineColor = Color3.fromRGB(0, 200, 255)
									hl.Adornee = model
									hl.Parent = model
									table.insert(generatorHighlights, hl)
								end
							end
						end
					end
				end
			end
		end
	end
end)

-- Função 3 - Destacar Itens (verde)
local itemHighlights = {}
createToggle("Destacar Itens (verde)", 100, function(enabled)
	for _, h in pairs(itemHighlights) do h:Destroy() end
	table.clear(itemHighlights)

	if enabled then
		local currentRoom = workspace:FindFirstChild("CurrentRoom")
		if currentRoom then
			local itemsFolder = currentRoom:FindFirstChild("Items")
			if itemsFolder then
				for _, model in ipairs(itemsFolder:GetChildren()) do
					if model:IsA("Model") then
						local hl = Instance.new("Highlight")
						hl.FillColor = Color3.fromRGB(0, 255, 100)
						hl.FillTransparency = 0.3
						hl.OutlineColor = Color3.fromRGB(0, 200, 0)
						hl.Adornee = model
						hl.Parent = model
						table.insert(itemHighlights, hl)
					end
				end
			end
		end
	end
end)

-- Minimizar com conteúdo junto
local isMinimized = false
minimizeButton.MouseButton1Click:Connect(function()
	if isMinimized then
		frame:TweenSize(UDim2.new(0, 400, 0, 300), "Out", "Quad", 0.2, true)
		minimizeButton.Text = "-"
	else
		frame:TweenSize(UDim2.new(0, 100, 0, 50), "Out", "Quad", 0.2, true)
		minimizeButton.Text = "+"
	end
	isMinimized = not isMinimized
	contentFrame.Visible = not isMinimized
end)
